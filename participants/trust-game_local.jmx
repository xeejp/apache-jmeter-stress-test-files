<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="XEE負荷テスト" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="スレッドグループ" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="ループコントローラ" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1456619236000</longProp>
        <longProp name="ThreadGroup.end_time">1456619236000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="実験ログイン" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="フロントページアクセス" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">4000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダマネージャ" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:4000/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ja-JP</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident/6.0)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html, application/xhtml+xml, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="実験アクセス" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">token</stringProp>
                  <stringProp name="Argument.value">a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">4000</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/experiment</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダマネージャ" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://localhost:4000/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ja-JP</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident/6.0)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html, application/xhtml+xml, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正規表現抽出" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">topic</stringProp>
              <stringProp name="RegexExtractor.regex">window._topic = &quot;([^&quot;]*)&quot;;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正規表現抽出" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">token</stringProp>
              <stringProp name="RegexExtractor.regex">window._token = &quot;([^&quot;]*)&quot;;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="phx_join" enabled="true">
            <stringProp name="serverAddress">localhost</stringProp>
            <stringProp name="serverPort">4000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/socket/websocket</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;topic&quot;:&quot;${topic}&quot;,&quot;event&quot;:&quot;phx_join&quot;,&quot;payload&quot;:{&quot;token&quot;:&quot;${token}&quot;},&quot;ref&quot;:&quot;1&quot;}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">5000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">${token}</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="待ち時間指定(10秒x回数)" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="一時停止" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">2</intProp>
            <stringProp name="ActionProcessor.duration">10000</stringProp>
          </TestAction>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="heartbeat" enabled="true">
            <stringProp name="serverAddress">localhost</stringProp>
            <stringProp name="serverPort">4000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/socket/websocket</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;topic&quot;:&quot;${topic}&quot;,&quot;event&quot;:&quot;ping&quot;,&quot;payload&quot;:{},&quot;ref&quot;:&quot;24&quot;}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">5000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">${token}</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
        </hashTree>
        <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="正規表現開始" enabled="false">
          <stringProp name="serverAddress">localhost</stringProp>
          <stringProp name="serverPort">4000</stringProp>
          <stringProp name="implementation">RFC6455 (v13)</stringProp>
          <stringProp name="protocol">ws</stringProp>
          <stringProp name="contextPath">/socket/websocket</stringProp>
          <stringProp name="contentEncoding">UTF-8</stringProp>
          <stringProp name="requestPayload"></stringProp>
          <stringProp name="connectionTimeout">5000</stringProp>
          <stringProp name="responseTimeout">5000</stringProp>
          <boolProp name="ignoreSslErrors">true</boolProp>
          <boolProp name="streamingConnection">true</boolProp>
          <stringProp name="connectionId">${token}</stringProp>
          <stringProp name="responsePattern"></stringProp>
          <stringProp name="closeConncectionPattern"></stringProp>
          <stringProp name="proxyAddress"></stringProp>
          <stringProp name="proxyPassword"></stringProp>
          <stringProp name="proxyPort"></stringProp>
          <stringProp name="proxyUsername"></stringProp>
          <stringProp name="messageBacklog">3</stringProp>
          <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="一時停止" enabled="false">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">2</intProp>
          <stringProp name="ActionProcessor.duration">1000</stringProp>
        </TestAction>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="ループコントローラ" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">3</stringProp>
        </LoopController>
        <hashTree>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="fetch_contents" enabled="true">
            <stringProp name="serverAddress">localhost</stringProp>
            <stringProp name="serverPort">4000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/socket/websocket</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;topic&quot;:&quot;${topic}&quot;,&quot;event&quot;:&quot;client&quot;,&quot;payload&quot;:{&quot;body&quot;:{&quot;action&quot;:&quot;FETCH_CONTENTS&quot;,&quot;params&quot;:null}},&quot;ref&quot;:&quot;2&quot;}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">5000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">${token}</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="定数タイマ" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正規表現抽出" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">role</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;type&quot;:&quot;update contents&quot;,&quot;payload&quot;:{&quot;role&quot;:&quot;([^&quot;]*)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If コントローラ" enabled="true">
            <stringProp name="IfController.condition">&quot;${role}&quot;==&quot;investor&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="fetch_contents" enabled="true">
              <stringProp name="serverAddress">localhost</stringProp>
              <stringProp name="serverPort">4000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/socket/websocket</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;topic&quot;:&quot;${topic}&quot;,&quot;event&quot;:&quot;client&quot;,&quot;payload&quot;:{&quot;body&quot;:{&quot;action&quot;:&quot;FETCH_CONTENTS&quot;,&quot;params&quot;:null}},&quot;ref&quot;:&quot;2&quot;}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">5000</stringProp>
              <boolProp name="ignoreSslErrors">true</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId">${token}</stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正規表現抽出" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">price</stringProp>
                <stringProp name="RegexExtractor.regex">,&quot;game_point&quot;:([^,]*),&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="seller" enabled="true">
              <stringProp name="serverAddress">localhost</stringProp>
              <stringProp name="serverPort">4000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/socket/websocket</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;topic&quot;:&quot;${topic}&quot;,&quot;event&quot;:&quot;client&quot;,&quot;payload&quot;:{&quot;body&quot;:{&quot;action&quot;:&quot;FINISH_INVESTING&quot;,&quot;params&quot;:${__Random(0, ${price})}}},&quot;ref&quot;:&quot;7&quot;}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">5000</stringProp>
              <boolProp name="ignoreSslErrors">true</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId">${token}</stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">10</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正規表現抽出" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">bidded</stringProp>
                <stringProp name="RegexExtractor.regex">{&quot;personal&quot;:{&quot;bidded&quot;:[false,([^]]*)]</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">true</stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If コントローラ" enabled="true">
            <stringProp name="IfController.condition">&quot;${role}&quot;!=&quot;investor&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="定数タイマ" enabled="true">
              <stringProp name="ConstantTimer.delay">5000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="fetch_contents" enabled="true">
              <stringProp name="serverAddress">localhost</stringProp>
              <stringProp name="serverPort">4000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/socket/websocket</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;topic&quot;:&quot;${topic}&quot;,&quot;event&quot;:&quot;client&quot;,&quot;payload&quot;:{&quot;body&quot;:{&quot;action&quot;:&quot;FETCH_CONTENTS&quot;,&quot;params&quot;:null}},&quot;ref&quot;:&quot;2&quot;}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">5000</stringProp>
              <boolProp name="ignoreSslErrors">true</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId">${token}</stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正規表現抽出" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">price2</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;inv_final&quot;:([^,]*),&quot;id&quot;:</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="buyer" enabled="true">
              <stringProp name="serverAddress">localhost</stringProp>
              <stringProp name="serverPort">4000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/socket/websocket</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;topic&quot;:&quot;${topic}&quot;,&quot;event&quot;:&quot;client&quot;,&quot;payload&quot;:{&quot;body&quot;:{&quot;action&quot;:&quot;FINISH_RESPONDING&quot;,&quot;params&quot;:${__Random(0, ${price2})}}},&quot;ref&quot;:&quot;7&quot;}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">5000</stringProp>
              <boolProp name="ignoreSslErrors">true</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId">${token}</stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">10</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正規表現抽出" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">bidded</stringProp>
                <stringProp name="RegexExtractor.regex">{&quot;personal&quot;:{&quot;bidded&quot;:[false,([^]]*)]</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">true</stringProp>
                <stringProp name="RegexExtractor.match_number"></stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="グラフ表示" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="結果を表で表示" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="結果をツリーで表示" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
